// Requires NodeJS 18 LTS or higher, I think.
/*
// FIXME: This program is completely incorrect. Some of the projects within
GNU do not follow the predictable pattern of project_name/proj-1.2.3.tar.gz.

GCC in particular has its tarballs within folders under gcc/, but it has long
outdated versions not in these folders. I think this approach needs to be tabled
for now, but I'll keep this script around for historical purposes.

*/
import { writeFile } from "node:fs/promises";
/*
This is a script that fetches the latest source zip and signature for each
project published by the GNU project.

The GNU project requests that you download these packages from a mirror, but we
are choosing not to do that here just because this is an especially sensitive
download.

This script is designed to require no dependencies. It does not parse the HTML.
It just treats it like a string, which is good enough for our purposes.

*/

const GNU_ROOT = "https://ftp.gnu.org/gnu/";
const START_OF_URL = "<a href=\"";
/** This is ALSO the start of the file size. You have to filter those out. */
const START_OF_TIMESTAMP = "<td align=\"right\">";

const projects = [
    "3dldf/",
    "8sync/",
    "GNUinfo/",
    "GNUsBulletins/",
    "Licenses/",
    "MailingListArchives/",
    "MicrosPorts/",
    "a2ps/",
    "acct/",
    "acm/",
    "adns/",
    "alive/",
    "anastasis/",
    "anubis/",
    "apl/",
    "archimedes/",
    "aris/",
    "artanis/",
    "aspell-dict-csb/",
    "aspell-dict-ga/",
    "aspell-dict-hr/",
    "aspell-dict-is/",
    "aspell-dict-it/",
    "aspell-dict-sk/",
    "aspell/",
    "auctex/",
    "autoconf-archive/",
    "autoconf/",
    "autogen/",
    "automake/",
    "avl/",
    "ballandpaddle/",
    "barcode/",
    "bash/",
    "bayonne/",
    "bc/",
    "binutils/",
    "bison/",
    "bool/",
    "bpel2owfn/",
    "c-graph/",
    "c-intro-and-ref/",
    "ccaudio/",
    "ccd2cue/",
    "ccrtp/",
    "ccscript/",
    "cfengine/",
    "cflow/",
    "cgicc/",
    "chess/",
    "cim/",
    "classpath/",
    "classpathx/",
    "clisp/",
    "combine/",
    "commonc++/",
    "commoncpp/",
    "complexity/",
    "config/",
    "coreutils/",
    "cpio/",
    "cppi/",
    "cssc/",
    "cursynth/",
    "dap/",
    "datamash/",
    "ddd/",
    "ddrescue/",
    "dejagnu/",
    "denemo/",
    "dico/",
    "diction/",
    "diffutils/",
    "direvent/",
    "dismal/",
    "dominion/",
    "easejs/",
    "ed/",
    "edma/",
    "electric/",
    "emacs/",
    "emms/",
    "enscript/",
    "fdisk/",
    "ferret/",
    "findutils/",
    "fisicalab/",
    "flex/",
    "foliot/",
    "fontopia/",
    "fontutils/",
    "freedink/",
    "freefont/",
    "freeipmi/",
    "freetalk/",
    "g-golf/",
    "gama/",
    "garpd/",
    "gawk/",
    "gcal/",
    "gcc/",
    "gcide/",
    "gcl/",
    "gcompris/",
    "gdb/",
    "gdbm/",
    "gengen/",
    "gengetopt/",
    "gettext/",
    "gforth/",
    "ggradebook/",
    "ghostscript/",
    "gift/",
    "git/",
    "glibc/",
    "global/",
    "glpk/",
    "gmp/",
    "gnash/",
    "gnats/",
    "gnatsweb/",
    "gnu-c-manual/",
    "gnu-crypto/",
    "gnu-pw-mgr/",
    "gnuastro/",
    "gnubatch/",
    "gnubg/",
    "gnubik/",
    "gnuboot/",
    "gnucap/",
    "gnucobol/",
    "gnudos/",
    "gnugo/",
    "gnuit/",
    "gnujump/",
    "gnukart/",
    "gnumach/",
    "gnun/",
    "gnunet/",
    "gnupod/",
    "gnuprologjava/",
    "gnuradio/",
    "gnurobots/",
    "gnuschool/",
    "gnushogi/",
    "gnusound/",
    "gnuspeech/",
    "gnuspool/",
    "gnustep/",
    "gnutls/",
    "gnutrition/",
    "gnuzilla/",
    "goptical/",
    "gperf/",
    "gprofng-gui/",
    "gprolog/",
    "greg/",
    "grep/",
    "groff/",
    "grub/",
    "gsasl/",
    "gsegrafix/",
    "gsl/",
    "gslip/",
    "gsrc/",
    "gss/",
    "gtypist/",
    "guile-cv/",
    "guile-debbugs/",
    "guile-gnome/",
    "guile-gtk/",
    "guile-ncurses/",
    "guile-opengl/",
    "guile-rpc/",
    "guile-sdl/",
    "guile/",
    "guix/",
    "gv/",
    "gvpe/",
    "gwl/",
    "gxmessage/",
    "gzip/",
    "halifax/",
    "health/",
    "hello/",
    "help2man/",
    "hp2xx/",
    "httptunnel/",
    "hurd/",
    "hyperbole/",
    "icecat/",
    "idutils/",
    "ignuit/",
    "indent/",
    "inetutils/",
    "intlfonts/",
    "jacal/",
    "jami/",
    "jel/",
    "jtw/",
    "jwhois/",
    "kawa/",
    "less/",
    "libc/",
    "libcdio/",
    "libextractor/",
    "libffcall/",
    "libiconv/",
    "libidn/",
    "libmatheval/",
    "libmicrohttpd/",
    "libredwg/",
    "librejs/",
    "libsigsegv/",
    "libtasn1/",
    "libtool/",
    "libunistring/",
    "libxmi/",
    "lightning/",
    "lilypond/",
    "linux-libre/",
    "liquidwar6/",
    "lsh/",
    "m4/",
    "macchanger/",
    "mailman/",
    "mailutils/",
    "make/",
    "marst/",
    "maverik/",
    "mc/",
    "mcron/",
    "mcsim/",
    "mdk/",
    "mes/",
    "metahtml/",
    "mifluz/",
    "mig/",
    "miscfiles/",
    "mit-scheme/",
    "moe/",
    "motti/",
    "mpc/",
    "mpfr/",
    "mpria/",
    "mtools/",
    "myserver/",
    "nano/",
    "ncurses/",
    "nettle/",
    "non-gnu/",
    "ocrad/",
    "octave/",
    "oleo/",
    "orgadoc/",
    "osip/",
    "paperclips/",
    "parallel/",
    "parted/",
    "patch/",
    "pem/",
    "pexec/",
    "pies/",
    "plotutils/",
    "poke/",
    "proxyknife/",
    "pspp/",
    "psychosynth/",
    "pth/",
    "radius/",
    "rcs/",
    "readline/",
    "recutils/",
    "reftex/",
    "remotecontrol/",
    "rottlog/",
    "rpge/",
    "rush/",
    "sather/",
    "sauce/",
    "savannah/",
    "scm/",
    "screen/",
    "sed/",
    "serveez/",
    "sharutils/",
    "shepherd/",
    "shishi/",
    "shmm/",
    "shtool/",
    "sipwitch/",
    "slib/",
    "smalltalk/",
    "solfege/",
    "spacechart/",
    "speedx/",
    "spell/",
    "sqltutor/",
    "src-highlite/",
    "stow/",
    "superopt/",
    "swbis/",
    "taler/",
    "tar/",
    "termcap/",
    "termutils/",
    "teseq/",
    "teximpatient/",
    "texinfo/",
    "time/",
    "tramp/",
    "trueprint/",
    "unifont/",
    "units/",
    "unrtf/",
    "userv/",
    "uucp/",
    "vc-dwim/",
    "vcdimager/",
    "vera/",
    "wb/",
    "wdiff/",
    "websocket4j/",
    "wget/",
    "which/",
    "windows/",
    "xaos/",
    "xboard/",
    "xlogmaster/",
    "xnee/",
    "xorriso/",
    "zile/",
];

async function main () {
    const urls = [];
    for (const project of projects) {
        try {
            const r = await fetch(GNU_ROOT + project);
            const text = await r.text();
            const rows = text.split("<tr").map((row) => row.replace(/\s+/, ""));
            for (const row of rows) {
                const u1 = row.indexOf(START_OF_URL);
                if (u1 === -1) continue;
                const u2 = row.indexOf('"', u1 + START_OF_URL.length);
                if (u2 === -1) continue;
                const url = row.slice(u1 + START_OF_URL.length, u2);
                if (url.endsWith("/") || url.startsWith("?")) continue;
                if (!url.charAt(0).match(/[a-z]/)) continue;
                console.log(GNU_ROOT + project + url);
                urls.push(GNU_ROOT + project + url);
            }
        } catch (e) {
            console.error(e);
            continue;
        }
    }
    await writeFile("gnu-urls.txt", urls.join("\n"));
    console.log("Now you have to manually select which URLs you want to keep from gnu-urls.txt.");
    console.log("Sorry, but there are too many pitfalls with automating this.");
    console.log("It's not worth hours perfecting this script for something that won't be done very often.");
}

main();